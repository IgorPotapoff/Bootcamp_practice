Задача No31. Решение в группах
Последовательностью Фибоначчи называется последовательность чисел a0, a1, ..., an, ..., где
a0 = 0, a1 = 1, ak = ak-1 + ak-2 (k > 1). Требуется найти N-е число Фибоначчи
Input: 7 Output: 21
Задание необходимо решать через рекурсию

найти факториал числа N с помощью рекурсии


n = int(input('Введите число: '))

def fact(x):
    if x == 1:
        return 1
    elif x < 1:
        print('Неверный ввод данных.')
        x = int(input('Введите новое число: '))
        fact(x)
    return x * fact(x-1)
print(fact(n))


Задача No35. Решение в группах
Напишите функцию, которая принимает одно число и проверяет, является ли оно простым
Напоминание: Простое число - это число, которое имеет 2 делителя: 1 и n(само число)
Input: 5 Output: yes

ef is_prime(n, dil=2):
    if n <= 1:
        return False
    if n == 2:
        return True
    if n % dil == 0:
        return False
    if dil * dil> n:
        return True
    return is_prime(n, dil + 1)


Дано натуральное число N и последовательность из N элементов. Требуется вывести эту последовательность в обратном порядке.
Примечание. В программе запрещается объявлять массивы и использовать циклы (даже для ввода и вывода).
Input: 2 -> 3 4 Output: 4 3









# # Два различных натуральных числа n и m называются дружественными,
# если сумма делителей числа n (включая 1, но исключая само n) равна числу m и наоборот.
# Например, 220 и 284 – дружественные числа. По данному числу k выведите все пары дружественных чисел,
# каждое из которых не превосходит k. Программа получает на вход одно натуральное число k,
# не превосходящее 105. Программа должна вывести все пары дружественных чисел, каждое из которых
# не превосходит k. Пары необходимо выводить по одной в строке, разделяя пробелами.
# Каждая пара должна быть выведена только один раз (перестановка чисел новую пару не дает).
# Ввод: Вывод:
# 300 220 284


lst = []
num = 300


number1 = 0

for j in range(num):
    for i in range(1,j):
        if j % i == 0:
            number1 = number1 +i
    lst.append([j,number1])
    number1 = 0

for i in range(len(lst)):
    for j in range(i, len(lst)):
        if i != j and lst[i][0]==lst[j][1] and lst[i][1]==lst[j][0]:
            print(lst[i])



